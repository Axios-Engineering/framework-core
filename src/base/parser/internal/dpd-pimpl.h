// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#ifndef CXX___XML_XSD_DPD_PIMPL_H
#define CXX___XML_XSD_DPD_PIMPL_H

#include "dpd-pskel.h"

namespace dpd
{
  class devicepkg_pimpl: public devicepkg_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    title (const ::std::string&);

    virtual void
    author ();

    virtual void
    description (const ::std::string&);

    virtual void
    hwdeviceregistration ();

    virtual void
    id (const ::std::string&);

    virtual void
    name (const ::std::string&);

    virtual void
    version (const ::std::string&);

    virtual void
    post_devicepkg ();
  };

  class author_pimpl: public virtual author_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    name (const ::std::string&);

    virtual void
    company (const ::std::string&);

    virtual void
    webpage (const ::std::string&);

    virtual void
    post_author ();
  };

  class hwdeviceregistration_pimpl: public virtual hwdeviceregistration_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    propertyfile ();

    virtual void
    description (const ::std::string&);

    virtual void
    manufacturer (const ::std::string&);

    virtual void
    modelnumber (const ::std::string&);

    virtual void
    deviceclass ();

    virtual void
    childhwdevice ();

    virtual void
    id (const ::std::string&);

    virtual void
    name (const ::std::string&);

    virtual void
    version (const ::std::string&);

    virtual void
    post_hwdeviceregistration ();
  };

  class propertyfile_pimpl: public virtual propertyfile_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    localfile ();

    virtual void
    type (const ::std::string&);

    virtual void
    post_propertyfile ();
  };

  class localfile_pimpl: public virtual localfile_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    name (const ::std::string&);

    virtual void
    post_localfile ();
  };

  class deviceclass_pimpl: public virtual deviceclass_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    class_ (const ::std::string&);

    virtual void
    post_deviceclass ();
  };

  class childhwdevice_pimpl: public virtual childhwdevice_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    hwdeviceregistration ();

    virtual void
    devicepkgref ();

    virtual void
    post_childhwdevice ();
  };

  class devicepkgref_pimpl: public virtual devicepkgref_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    localfile ();

    virtual void
    type (const ::std::string&);

    virtual void
    post_devicepkgref ();
  };
}

#endif // CXX___XML_XSD_DPD_PIMPL_H
