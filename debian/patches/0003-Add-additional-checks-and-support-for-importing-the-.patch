From: Michael Ihde <michael.ihde@axiosengineering.com>
Date: Wed, 13 Mar 2013 22:26:39 +0000
Subject: Add additional checks and support for importing the omniidl module,
 because on Ubuntu it's not on the Python path

---
 src/base/framework/python/ossie/utils/idl.py       |   79 ++++++++++++++++++++
 .../framework/python/ossie/utils/sca/importIDL.py  |    4 +-
 src/configure.ac                                   |    4 +
 src/omnijni/src/cpp/CORBA/generate-holders.py      |   55 ++++++++++++++
 4 files changed, 141 insertions(+), 1 deletion(-)
 create mode 100644 src/base/framework/python/ossie/utils/idl.py

diff --git a/src/base/framework/python/ossie/utils/idl.py b/src/base/framework/python/ossie/utils/idl.py
new file mode 100644
index 0000000..f80f424
--- /dev/null
+++ b/src/base/framework/python/ossie/utils/idl.py
@@ -0,0 +1,79 @@
+#!/usr/bin/env python
+#
+# On some systems, such as Debian-based ones, omniidl isn't directly on the
+# Python path.  If you look at /usr/bin/omniidl is contains logic to find
+# the modules to load.  To remain portable REDHAWK code should use:
+#
+#     from ossie.utils.idl import omniidl
+#
+# Instead of:
+#
+#     import omniidl
+#
+
+__all__ = ["omniidl", "omniidl_be", "_omniidl"]
+
+import sys
+import os, os.path
+
+# Logic 'borrowed' from /usr/bin/omniidl
+
+pylibdir   = archlibdir = None
+binarchdir = os.path.abspath(os.path.dirname(sys.argv[0]))
+
+# Try a path based on the installation prefix, customised for Debian
+sppath = "/usr/lib/omniidl"
+
+if os.path.isdir(sppath):
+    sys.path.append(sppath)
+
+# Paths in a traditional omni tree
+if binarchdir != "":
+    sys.path.insert(0, binarchdir)
+    bindir, archname = os.path.split(binarchdir)
+    treedir, bin     = os.path.split(bindir)
+    if bin == "bin":
+        pylibdir    = os.path.join(treedir, "lib", "python")
+        vpylibdir   = pylibdir + sys.version[:3] + "/site-packages"
+        vpylib64dir = (os.path.join(treedir, "lib64", "python") +
+                       sys.version[:3] + "/site-packages")
+        archlibdir  = os.path.join(treedir, "lib", archname)
+
+        if os.path.isdir(pylibdir):
+            sys.path.insert(0, pylibdir)
+
+        if os.path.isdir(vpylib64dir):
+            sys.path.insert(0, vpylib64dir)
+
+        if os.path.isdir(vpylibdir):
+            sys.path.insert(0, vpylibdir)
+
+        if os.path.isdir(archlibdir):
+            sys.path.insert(0, archlibdir)
+
+    elif archname == "bin":
+        pylibdir    = os.path.join(bindir, "lib", "python")
+        vpylibdir   = pylibdir + sys.version[:3] + "/site-packages"
+        vpylib64dir = (os.path.join(bindir, "lib64", "python") +
+                       sys.version[:3] + "/site-packages")
+        archlibdir  = os.path.join(bindir, "lib")
+
+        if os.path.isdir(pylibdir):
+            sys.path.insert(0, pylibdir)
+
+        if os.path.isdir(vpylib64dir):
+            sys.path.insert(0, vpylib64dir)
+
+        if os.path.isdir(vpylibdir):
+            sys.path.insert(0, vpylibdir)
+
+        if os.path.isdir(archlibdir):
+            sys.path.insert(0, archlibdir)
+
+import omniidl
+import omniidl_be
+import _omniidl
+
+omniidl = omniidl
+omniidl_be = omniidl_be
+_omniidl = _omniidl
diff --git a/src/base/framework/python/ossie/utils/sca/importIDL.py b/src/base/framework/python/ossie/utils/sca/importIDL.py
index f0d7aae..52b6703 100644
--- a/src/base/framework/python/ossie/utils/sca/importIDL.py
+++ b/src/base/framework/python/ossie/utils/sca/importIDL.py
@@ -18,9 +18,11 @@
 # along with this program.  If not, see http://www.gnu.org/licenses/.
 #
 
+from ossie.utils.idl import omniidl
 from omniidl import idlast, idlvisitor, idlutil, main, idltype
+from ossie.utils.idl import omniidl_be
 from omniidl_be.cxx import types
-import _omniidl
+from ossie.utils.idl import _omniidl
 import os
 try:
     from omniORB import URI, any, CORBA
diff --git a/src/configure.ac b/src/configure.ac
index 8cb1f36..f31aeb0 100644
--- a/src/configure.ac
+++ b/src/configure.ac
@@ -191,6 +191,10 @@ AM_CONDITIONAL(INSTALL_PYTHON_BACKPORTS, test "$PYTHON_VERSION" = "2.3")
 AC_CHECK_PYMODULE(logging ,[], [AC_MSG_ERROR([the python logging module is required])])
 AC_CHECK_PYMODULE(subprocess, [], [AC_MSG_ERROR([the python subprocess module is required])])
 AC_CHECK_PYMODULE(omniORB, [], [AC_MSG_ERROR([the python omniORB module is required])])
+if test -d /usr/lib/omniidl; then # for debian-based systems
+  export PYTHONPATH=${PYTHONPATH}:/usr/lib/omniidl
+fi
+AC_CHECK_PYMODULE(omniidl, [], [AC_MSG_ERROR([the python omniidl module is required])])
 
 AC_LANG_POP
 AC_HEADER_SYS_WAIT
diff --git a/src/omnijni/src/cpp/CORBA/generate-holders.py b/src/omnijni/src/cpp/CORBA/generate-holders.py
index 781796e..5e44637 100644
--- a/src/omnijni/src/cpp/CORBA/generate-holders.py
+++ b/src/omnijni/src/cpp/CORBA/generate-holders.py
@@ -20,6 +20,61 @@
 #
 
 import sys
+import os, os.path
+
+# Copy of path-building logic from omniidl
+pylibdir   = archlibdir = None
+binarchdir = os.path.abspath(os.path.dirname(sys.argv[0]))
+
+# Try a path based on the installation prefix, customised for Debian
+sppath = "/usr/lib/omniidl"
+
+if os.path.isdir(sppath):
+    sys.path.append(sppath)
+
+# Paths in a traditional omni tree
+if binarchdir != "":
+    sys.path.insert(0, binarchdir)
+    bindir, archname = os.path.split(binarchdir)
+    treedir, bin     = os.path.split(bindir)
+    if bin == "bin":
+        pylibdir    = os.path.join(treedir, "lib", "python")
+        vpylibdir   = pylibdir + sys.version[:3] + "/site-packages"
+        vpylib64dir = (os.path.join(treedir, "lib64", "python") +
+                       sys.version[:3] + "/site-packages")
+        archlibdir  = os.path.join(treedir, "lib", archname)
+
+        if os.path.isdir(pylibdir):
+            sys.path.insert(0, pylibdir)
+
+        if os.path.isdir(vpylib64dir):
+            sys.path.insert(0, vpylib64dir)
+
+        if os.path.isdir(vpylibdir):
+            sys.path.insert(0, vpylibdir)
+
+        if os.path.isdir(archlibdir):
+            sys.path.insert(0, archlibdir)
+
+    elif archname == "bin":
+        pylibdir    = os.path.join(bindir, "lib", "python")
+        vpylibdir   = pylibdir + sys.version[:3] + "/site-packages"
+        vpylib64dir = (os.path.join(bindir, "lib64", "python") +
+                       sys.version[:3] + "/site-packages")
+        archlibdir  = os.path.join(bindir, "lib")
+
+        if os.path.isdir(pylibdir):
+            sys.path.insert(0, pylibdir)
+
+        if os.path.isdir(vpylib64dir):
+            sys.path.insert(0, vpylib64dir)
+
+        if os.path.isdir(vpylibdir):
+            sys.path.insert(0, vpylibdir)
+
+        if os.path.isdir(archlibdir):
+            sys.path.insert(0, archlibdir)
+
 from omniidl import idlast, idltype
 from omnijni import cppcode
 from omnijni import idljni
-- 
