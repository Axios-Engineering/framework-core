From: Ubuntu <michael.ihde@axiosengineering.com>
Date: Sun, 17 Mar 2013 00:44:35 +0000
Subject: Fix compile error on Ubuntu 12.10 due to gcc strictness

---
 src/base/include/ossie/PropertyInterface.h    |   18 +++++++++---------
 src/control/include/ossie/PropertyInterface.h |   16 ++++++++--------
 2 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/src/base/include/ossie/PropertyInterface.h b/src/base/include/ossie/PropertyInterface.h
index 791b50a..ac17788 100644
--- a/src/base/include/ossie/PropertyInterface.h
+++ b/src/base/include/ossie/PropertyInterface.h
@@ -188,7 +188,7 @@ public:
 
     virtual void setValue (const CORBA::Any& newValue)
     {
-        if (fromAny(newValue, value_)) {
+        if (this->fromAny(newValue, value_)) {
             isNil_ = false;
         } else {
             isNil_ = enableNil_;
@@ -216,7 +216,7 @@ public:
         }
 
         value_type tmp;
-        if (fromAny(a, tmp)) {
+        if (this->fromAny(a, tmp)) {
             if (tmp != this->value_) {
                 return 1;
             }
@@ -331,7 +331,7 @@ public:
         }
 
         value_type tmp;
-        if (fromAny(a, tmp)) {
+        if (this->fromAny(a, tmp)) {
             if (tmp < super::value_) {
                 return -1;
             }
@@ -348,7 +348,7 @@ public:
     {
         if (!super::isNil_) {
             value_type tmp;
-            if (fromAny(a, tmp)) {
+            if (this->fromAny(a, tmp)) {
                 super::value_ += tmp;
             }
         }
@@ -358,7 +358,7 @@ public:
     {
         if (!super::isNil_) {
             value_type tmp;
-            if (fromAny(a, tmp)) {
+            if (this->fromAny(a, tmp)) {
                 super::value_ -= tmp;
             }
         }
@@ -416,7 +416,7 @@ public:
 
     virtual void setValue (const CORBA::Any& newValue)
     {
-        fromAny(newValue, value_);
+        this->fromAny(newValue, value_);
     }
 
     virtual void isNil (bool nil)
@@ -445,7 +445,7 @@ public:
         }
 
         value_type tmp;
-        if (fromAny(a, tmp)) {
+        if (this->fromAny(a, tmp)) {
             if (tmp.size() != this->value_.size()) {
                 return 1;
             }
@@ -608,7 +608,7 @@ public:
         }
 
         value_type tmp;
-        if (fromAny(a, tmp)) {
+        if (this->fromAny(a, tmp)) {
             if (tmp != super::value_) {
                 return 1;
             }
@@ -652,7 +652,7 @@ public:
 
     virtual void setValue (const CORBA::Any& newValue)
     {
-        fromAny(newValue, value_);
+        this->fromAny(newValue, value_);
     }
 
     virtual const value_type& getValue (void)
diff --git a/src/control/include/ossie/PropertyInterface.h b/src/control/include/ossie/PropertyInterface.h
index 9ad8291..493fae0 100644
--- a/src/control/include/ossie/PropertyInterface.h
+++ b/src/control/include/ossie/PropertyInterface.h
@@ -186,7 +186,7 @@ public:
 
     virtual void setValue (const CORBA::Any& newValue)
     {
-        if (fromAny(newValue, value_)) {
+        if (this->fromAny(newValue, value_)) {
             isNil_ = false;
         } else {
             isNil_ = enableNil_;
@@ -214,7 +214,7 @@ public:
         }
 
         value_type tmp;
-        if (fromAny(a, tmp)) {
+        if (this->fromAny(a, tmp)) {
             if (tmp != this->value_) {
                 return 1;
             }
@@ -329,7 +329,7 @@ public:
         }
 
         value_type tmp;
-        if (fromAny(a, tmp)) {
+        if (this->fromAny(a, tmp)) {
             if (tmp < super::value_) {
                 return -1;
             }
@@ -346,7 +346,7 @@ public:
     {
         if (!super::isNil_) {
             value_type tmp;
-            if (fromAny(a, tmp)) {
+            if (this->fromAny(a, tmp)) {
                 super::value_ += tmp;
             }
         }
@@ -356,7 +356,7 @@ public:
     {
         if (!super::isNil_) {
             value_type tmp;
-            if (fromAny(a, tmp)) {
+            if (this->fromAny(a, tmp)) {
                 super::value_ -= tmp;
             }
         }
@@ -443,7 +443,7 @@ public:
         }
 
         value_type tmp;
-        if (fromAny(a, tmp)) {
+        if (this->fromAny(a, tmp)) {
             if (tmp.size() != this->value_.size()) {
                 return 1;
             }
@@ -606,7 +606,7 @@ public:
         }
 
         value_type tmp;
-        if (fromAny(a, tmp)) {
+        if (this->fromAny(a, tmp)) {
             if (tmp != super::value_) {
                 return 1;
             }
@@ -650,7 +650,7 @@ public:
 
     virtual void setValue (const CORBA::Any& newValue)
     {
-        fromAny(newValue, value_);
+        this->fromAny(newValue, value_);
     }
 
     virtual const value_type& getValue (void)
-- 
